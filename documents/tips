[Build a debug version of bochs]
* Download the sources
* ./configure --help
* ./configure --enable-debugger --enable-disasm
* make
* sudo make install


[Build mkinitrd tools]

gcc -o mkinitrd make_initrd.c


[Check the ELF Format]

objdump -xfh bin/crond

[disasm the ELF file]

objdump -xfhd bin/matrix


[Debugging tips]

* list the break points
blist

* trace the registers after each command
trace-reg on
trace-reg off

* translate linear address to physical address
page 0xC00ab000

* set a write break point
watch w 0x1d8000

* set a lenear address executive break point
lb 0x1040ea

* delete a break point by break point number
d 1

* next statement, not step in
p

* calculate an expression
? 0x1000+0x10
NOTE: no space between the expression

* disassemble the instruction at give address
u /10

* logging 
edit the bochsrc.bxrc, set the log option to a file

* print infomation
info tss

* Debugging process:
lb 0x104008
c
s
(step into irq_common_stub)
u /20
s
(step into irq_handler)
u /10
vb 0x08:0x1015f9
(step into switch_task)
lb 0x101d23
(print the stack when you got a panic)
print-stack 10
(check the value control registers)
creg
(check the page by the virtual address)
page 0xe007ffff

* Debugging APIC
boot your operating system and press the config button in bochs emulator
9. Log options for individual devices
then
28. [APIC0]
choose
ask
for all the actions



[Debugging with GDB+QEMU]

usage: qemu [options] [disk_image]

Note that if you are using GDB of x86_64 platform, you should change the qemu to qemu-system-x86_64.

* compile with debugging symbols using "-g" option

* put all of the debugging information in a separate file
objcopy --only-keep-debug matrix matrix.sym

* strip your executable of debugging information
objcopy --strip-debug matrix

* start qemu with your floppy image
qemu -s -S -drive file=~/vm/matrix/matrix.img,index=0,if=floppy
* start the gdbserver in your virtual machine
in your virtual machine
Ctrl + Alt + 2
gdbserver tcp::2012
* start gdb in another console
gdb
(gdb) file ~/sources/matrix/bin/matrix
Reading symbols from /home/ted/sources/matrix/bin/matrix...(no debugging symbols found)...done.
(gdb) target remote :2012
Remote debugging using :2012
(gdb) symbol-file ~/sources/matrix/bin/matrix.sym
Reading symbols from /home/ted/sources/matrix/bin/matrix.sym...done.
(gdb) break kmain
Breakpoint 1 at 0x10503c: file main.c, line 40.
(gdb) continue
Continuing.

Breakpoint 1, kmain (addr=can't compute CFA for this frame
) at main.c:40
40	{
(gdb)



[debug case study]
1.search sched_reschedule(0x108742) in matrix.map
2.search notifier_register(0x106ebf) in matrix.map
3.lb 0x106ebf
4.c
5.lb 0x108742
6.c
7.get the linear address of nf variable(0xc00a70a3)
8.page 0xc00a70a3
9.Get the physical page(0x1e0000) which linear address 0xc00a70a3 resides on
10.Get the physical address we interested in(data field of struct notifier).
11.watch w 0x1e00af 4
12.search process_switch(0x10773a) in matrix.map
13.lb 0x10773a
14.c
15.u /100
16.search the first ret(0x1077c6) instruction
17.lb 0x1077c6
18.search the first ret(0x108898) instruction
19.lb 0x108898
20.lb 0x104623 which is return instruction of irq_handler
21.c